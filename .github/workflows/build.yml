name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  release-check:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up environment
        run: |
          sudo apt-get update -y
          sudo apt-get install libxml2-utils jq -y
          LAST_VERSION=$(cat last_version)
        shell: bash

      - name: Check actions/runner for new release
        run: |
          echo "Last version is ${LAST_VERSION}"
          chmod +x release-check.sh

          # TODO: if there are no new releases found, exit the GitHub Actions workflow with success and not failure.
          ./release-check.sh -l "$LAST_VERSION" "actions/runner" || exit 0

      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: last_version
          path: /tmp/last_version

  build-and-export:
    runs-on: ${{ matrix.os }}
    needs: release-check

    strategy:
      matrix:
        os: [ubuntu-latest-ppc64le]

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Build and save the LXD runner image
        run: ./setup-build-env.sh

  update-last-version:
    runs-on: ubuntu-latest
    needs: build-and-export

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Update last_version in gaplib
        run: |
            export NEW_VERSION=$(cat /tmp/new_version)
            echo "${NEW_VERSION}"

            # update last_version file in github
            bash .travis/update-last-version.sh "${NEW_VERSION}"

      - name: Push changes back to origin
        run: |
          git config user.email "actions@github.com"
          git config user.name "GitHub Actions"
          git add 
          git commit -m "[skip ci] Auto commit from GitHub Actions"
          git push origin main